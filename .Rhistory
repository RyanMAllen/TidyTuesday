library(dplyr)
library(ggplot2)
player_dob <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-04-09/player_dob.csv")
grand_slams <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-04-09/grand_slams.csv")
grand_slam_timeline <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-04-09/grand_slam_timeline.csv")
g <- grand_slams %>%
select(name,gender,rolling_win_count) %>%
group_by(name, gender) %>%
summarise(rolling_win_count = sum(rolling_win_count))
males <- filter(g, gender == "Male")
top_10m <- males %>% arrange(desc(rolling_win_count)) %>% top_n(10)
females <- filter(g, gender == "Female")
top_10f <- females %>% arrange(desc(rolling_win_count)) %>% top_n(10)
top_10f
top_10m
chart <- ggplot(top_10m, aes(x=name, y= rolling_win_count))
chart + geom_bar(stat='identity')
top_10m <- within(top_10m,
rolling_win_count <- factor(rolling_win_count,
levels=names(sort(table(rolling_win_count),
decreasing=TRUE))))
chart <- ggplot(top_10m, aes(x=name, y= rolling_win_count))
chart + geom_bar(stat='identity')
ggplot(top_10m,
aes(x=reorder(name, name,
function(x)-length(x)))) +
geom_bar()
function(x)-length(x)) y = rolling_win_count) +
ggplot(top_10m,
aes(x=reorder(name, name,
function(x)-length(x)) y = rolling_win_count)) +
geom_bar()
ggplot(top_10m,
aes(x=reorder(name, name,
function(x)-length(x)) y = rolling_win_count))
ggplot(top_10m,
aes(x=reorder(name, name,
function(x)-length(x)) , y = rolling_win_count))
ggplot(top_10m,
aes(x=reorder(name, name,
function(x)-length(x)) , y = rolling_win_count)) + geom_bar()
ggplot(top_10m,
aes(x=reorder(name, name,
function(x)-length(x)) , y = rolling_win_count)) + geom_bar(stat = 'identity')
top_10m <- within(top_10m,
rolling_win_count <- factor(rolling_win_count,
levels=names(sort(table(rolling_win_count)
ggplot(top_10m, aes(x=reorder(name, -table(name)[name]))) + geom_bar()                                                    decreasing=TRUE))))
ggplot(top_10m, aes(x=reorder(name, -table(name)[name]))) + geom_bar()
ggplot(top_10m, aes(x=reorder(name, -table(rolling_win_count)[rolling_win_count]), y = rolling_win_count)) +
geom_bar(stat = 'identity')
ggplot(top_10m, aes(x=reorder(name, table(rolling_win_count)[rolling_win_count]), y = rolling_win_count)) +
geom_bar(stat = 'identity')
top_10m <- males %>% arrange(desc(rolling_win_count)) %>% top_n(1)
top_10m
top_10m <- (males %>% arrange(desc(rolling_win_count)) %>% top_n(10))
top_10m
top_10f <- females %>% arrange(desc(rolling_win_count))
top_10f
females <- filter(g, gender == "Female") %>% arrange(desc(rolling_win_count))
females
females <- filter(g, gender == "Female") %>% arrange(desc(rolling_win_count)) %>% top_n(10)
females
top_10f <- females %>% top_n(10)
top_10f
males <- filter(g, gender == "Male") %>% arrange(desc(rolling_win_count)) %>% top_n(10)
males
males <- filter(g, gender == "Male") %>% arrange(desc(rolling_win_count)) %>% top_n(9)
males
males <- filter(g, gender == "Male") %>% arrange(desc(rolling_win_count)) %>% top_n(n=9)
males
dim(males)
males %>% top_n(3)
males %>% top_n(1,3)
top_10f <- slice(females, 1:10)
top_10f
females <- filter(g, gender == "Female") %>% arrange(desc(rolling_win_count))
females
females <- filter(g, gender == "Female") %>% arrange(desc(rolling_win_count)) %>% slice(1:10)
females
females[1]
top_10f <- slice(females, 1:10, .preserve = TRUE)
library(data.table)
females <- as.data.table(filter(g, gender == "Female") %>% arrange(desc(rolling_win_count)))
top_10f <- slice(females, 1:10)
top_10f
males <- as.data.table(filter(g, gender == "Male") %>% arrange(desc(rolling_win_count)) %>% top_n(n=9))
top_10m <- slice(males, 1:10)
chart <- ggplot(top_10m, aes(x=name, y= rolling_win_count))
chart + geom_bar(stat='identity')
ggplot(top_10m,
aes(x=reorder(name, name,
function(x)-length(x)) , y = rolling_win_count)) + geom_bar(stat = 'identity')
males$name <- factor(males$name, levels = males$name[order(-males$rolling_win_count)])
chart <- ggplot(top_10m, aes(x=name, y= rolling_win_count))
chart + geom_bar(stat='identity')
top_10m$name <- factor(top_10m$name, levels = top_10m$name[order(-top_10m$rolling_win_count)])
chart <- ggplot(top_10m, aes(x=name, y= rolling_win_count))
chart + geom_bar(stat='identity')
chart + geom_bar(stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
chart + geom_bar(stat='identity') + theme(panel.grid.major = element_blank(), axis.ticks = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
chart + geom_bar(stat='identity') + theme(panel.grid.major = element_blank(), axis.ticks = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_text(aes(label=y), vjust=0)
chart + geom_bar(stat='identity') + theme(panel.grid.major = element_blank(), axis.ticks = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_text(aes(label=rolling_win_count), vjust=0)
chart + geom_bar(stat='identity') + theme(panel.grid.major = element_blank(), axis.ticks = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_text(aes(label=rolling_win_count), vjust=0.1)
chart + geom_bar(stat='identity') + theme(panel.grid.major = element_blank(), axis.ticks = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_text(aes(label=rolling_win_count), vjust=0.5)
chart + geom_bar(stat='identity') + theme(panel.grid.major = element_blank(), axis.ticks = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_text(aes(label=rolling_win_count), vjust=-0.5)
chart + geom_bar(stat='identity') + theme(panel.grid.major = element_blank(), axis.ticks = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_text(aes(label=rolling_win_count), vjust=-0.5) + ggtitle("Top 10 Male Tennis Players")
chart1 <- ggplot(top_10f, aes(x=name, y= rolling_win_count))
chart1 + geom_bar(stat='identity') + theme(panel.grid.major = element_blank(), axis.ticks = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_text(aes(label=rolling_win_count), vjust=-0.5) + ggtitle("Top 10 Female Tennis Players")
top_10f$name <- factor(top_10f$name, levels = top_10f$name[order(-top_10f$rolling_win_count)])
chart1 <- ggplot(top_10f, aes(x=name, y= rolling_win_count))
chart1 + geom_bar(stat='identity') + theme(panel.grid.major = element_blank(), axis.ticks = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_text(aes(label=rolling_win_count), vjust=-0.5) + ggtitle("Top 10 Female Tennis Players")
head(top_10f)
rbind(top_10f,top_10m)
tops <- rbind(top_10f, top_10m)
p <- ggplot(tops, aes(name, rolling_win_count)) + geom_point()
# Use vars() to supply variables from the dataset:
p + facet_grid(rows = vars(tops$gender))
